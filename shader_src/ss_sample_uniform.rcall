#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_buffer_reference : require
#extension GL_EXT_shader_explicit_arithmetic_types_int64 : require
#extension GL_GOOGLE_include_directive : enable

#include "../shader_include/definitions.glsl"
#include "../shader_include/util.glsl"
#include "../shader_include/microfacet.glsl"

layout(shaderRecordEXT, std430) buffer sbtData {
    float ior;
    float roughness;
};

layout(location = 0) callableDataInEXT brdfEvaluation evaluation;

void main() {



    vec3 wo = evaluation.wo;
    // float cos_theta_o = wo.z;

    // float ior_rel = cos_theta_o > 0.0 ? 1.0 / ior : ior;

    // float sin_theta_tm_sq = ior_rel * ior_rel * (1.0 - cos_theta_o * cos_theta_o);

    // vec3 wi = vec3(0.0);

    // if (sin_theta_tm_sq < 1.0) {
    //     float cos_theta_tm = sqrt(1.0 - sin_theta_tm_sq);

    //     wi = -ior_rel * wo + (ior_rel * cos_theta_o - sign(cos_theta_o) * cos_theta_tm) * vec3(0.0, 0.0, 1.0);
    // } else {
    //     wi = 2.0 * cos_theta_o * vec3(0.0, 0.0, 1.0) - wo;
    // }

    vec3 wi = sampleUniformSphere(evaluation.rand_state);
    
    float alpha_sq = roughness * roughness;
    
    evaluation.weight = vec3(4.0 * pi * dielectricBsdfCosGgx(wi, wo, ior, alpha_sq));
    evaluation.wi = wi;
}