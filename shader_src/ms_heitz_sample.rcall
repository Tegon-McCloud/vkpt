#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_buffer_reference : require
#extension GL_EXT_shader_explicit_arithmetic_types_int64 : require
#extension GL_GOOGLE_include_directive : enable

#include "../shader_include/definitions.glsl"
#include "../shader_include/util.glsl"
#include "../shader_include/microfacet.glsl"

layout(shaderRecordEXT, std430) buffer sbtData {
    float ior;
    float roughness;
};

layout(location = 0) callableDataInEXT brdfEvaluation evaluation;


void main() {

    float alpha = roughness;    
    float alpha_sq = alpha * alpha;

    vec3 w = -evaluation.wo;
    float height = 1.0 + invHeightCdfUniform(0.999);
    float weight = 1.0;

    bool outside = w.z < 0.0;

    for (int i = 0; i < 32; i++) {

        bool escaped;

        if (outside) {
            height = sampleHeightGgxUniform(w, height, escaped, alpha_sq, evaluation.rand_state);
        } else {
            height = -sampleHeightGgxUniform(-w, -height, escaped, alpha_sq, evaluation.rand_state);
        }

        if (escaped) {
            evaluation.wi = w;
            evaluation.weight = vec3(weight);
            return;
        }

        w = sampleDielectricPhaseFunction(
            -w,
            outside,
            outside,
            weight,
            alpha,
            ior,
            evaluation.rand_state
        );
        // w = sampleConductorPhaseFunction(-w, weight, alpha, evaluation.rand_state);
    }

    evaluation.wi = vec3(0.0);
    evaluation.weight = vec3(0.0);
}