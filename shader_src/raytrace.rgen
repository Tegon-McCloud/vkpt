#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_GOOGLE_include_directive : enable

layout(set = 0, binding = 0) uniform accelerationStructureEXT topLevelAS;
layout(set = 0, binding = 1, rgba32f) uniform image2D image;

layout(location = 0) rayPayloadEXT vec3 color;

void main()  {

    // camera params
    vec3 forward = vec3(0.0, 0.0, -1.0);
    vec3 horizontal = vec3(1.0, 0.0, 0.0);
    vec3 vertical = vec3(0.0, 1.0, 0.0);

    ivec2 size = ivec2(gl_LaunchSizeEXT.xy);
    ivec2 position = ivec2(gl_LaunchIDEXT.xy);

    vec2 uv = (vec2(position) + 0.5) / vec2(size);

    vec3 origin = vec3(0.0, 0.5, 1.5);
    vec3 direction = normalize((2.0 * uv.x - 1.0) * horizontal + (1.0 - 2.0 * uv.y) * vertical + forward);

    uint rayFlags = gl_RayFlagsOpaqueEXT;
    uint cullMask = 0xff;
    float tMin = 1e-3;
    float tMax = 1e16;

    traceRayEXT(topLevelAS,   // acceleration structure
              rayFlags,       // rayFlags
              cullMask,       // cullMask
              0,              // sbtRecordOffset
              0,              // sbtRecordStride
              0,              // missIndex
              origin.xyz,     // ray origin
              tMin,           // ray min range
              direction.xyz,  // ray direction
              tMax,           // ray max range
              0               // payload (location = 0)
    );


    imageStore(image, position, vec4(color, 1.0));
}
